- 2 - Vim quickstart
  -- Modes --
1) Normal Mode: everything that's typed is a (case sensitive) command.
2) Insert Mode: enter the insert mode with "i". Exit with ESC.
3) Line Mode (Command Line Mode): enter the line mode with ":".

- 3 - Vim Essentials
  -- Essential Navigation Commands --
j, k, h, l (Move the cursor around)
CTRL-f (Move 1 page forward)
CTRL-b (Move 1 page back)
w (Move forward 1 word)
b (Move back 1 word)
W (Move forward 1 word irrespective of punctuation)
B (Move back 1 word irrespective of punctuation)
gg (Go to the start of the file)
G (Go to the end of the file)
<n>gg (Go to the nth line)
:44 ENTER (In line mode, goes to the 44th line)
:$ ENTER (In line mode, goes to the last line)
CTRL-G (Shows document informations)
:set ruler (In line mode, enable the ruler)
:set noruler (In line mode, disables the rules)
:set ruler! (In line mode, if the ruler is enabled, it disables it.)
g CTRL-G (Show more document informations)
z ENTER (Keeps the cursor at the current position, but reposition the view)
0 (Goes to the first column of the line)
<n> (j, k, l, h moves n characters in the selected direction)
^ (Moves to the first character of the line)
$ (Goes to the end of the line)
  -- Deleting text and thinking in Vim --
x (deletes the character at the right of the cursor)
X (deletes the character at the left of the cursor)
dw (deletes an entire word starting from the right of the cursor - d for the delete operation, w for the word)
dW (like the previous command but punctuation ignored)
d$ (deletes all the text from the right of the cursor)
d0 (deletes all the text from the left of the cursor)
db (deletes an entire word starting from the left of the cursor)
dB (like the previous command but ignores punctuation)
dd (deletes the whole line)
. (repeats the last command)

- 4 - The Vim Help System
:h[elp] (Open up the help system in a new read-only window)
:q[uit] (Close the help window)
CTRL-] on a certain word, opens the help for that command.
CTRL-o return back to the previous position in the documentation
CTRL-i goes forward to the position in the documentation
CTRL-ww switch window and position the cursor in the other window outside the documentation.
CTRL-d shows a list of commands that completes the command we're writing
TAB shows a wildmenu (:set wildmenu) for the possible completion of the command.

- 5 - Deleting, Yanking and Putting
Cut, Copy and Paste in vim are called Kill, Yank and Put.
Killing and yanking are operations stored in various types of registers:
1. Unnamed register
2. Numbered registers
3. Named registers
4. Black Hole register.

Registers are prefixed with "
Unnamed register: ""
Numbered registers: "0, "1, "2, etc.
Named registers: "a, "b, etc. (there are 26, from a to z)
Blackhole register: "_

"" contains text from the operations d, c, s, x, and y.
"0 holds the last yanked text (y)
"1 holds the last deleted (d) or changed (c) text.
Subsequent numbered registers shift with each d or c operation.
"_ the blackhole register stores text on demand without affecting other registers.

The d series of commands do not delete text physically. They kill the text instead.
For example, dd will kill the whole line and puts the line inside the unnamed register and in "1 register.

:reg (Inspect the content of the registers)
:reg 14 (Shows the content of registers "1 and "4)
u (Undo the last command)
CTRL-r (Redo the last command)
y (Yank text. This command accepts all previous variations od the 'd' command, yw, yy, etc).
p (Put (paste) the killed or yanked text in the line under the cursor)
P (Put the killed or yanked text in the line above the cursor)
"r d [y] (Kill or yank text in the specified register r)
"n p (Put the text stored in the register n)
"a y (Yank text in the named register a
"A y (Yank other text appending it in the named register a)

